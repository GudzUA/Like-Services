// app/drivers/apply/page.tsx
"use client";

import { useEffect, useState } from "react";
import Link from "next/link";

type Employment = "full-time" | "part-time";
type Activity = "taxi" | "delivery" | "both";

export default function DriverApplyPage() {
  // form state
  const [name, setName] = useState("");
  const [phone, setPhone] = useState("");
  const [telegram, setTelegram] = useState("");
  const [carMake, setCarMake] = useState("");
  const [carModel, setCarModel] = useState("");
  const [year, setYear] = useState<number | "">("");
  const [color, setColor] = useState("");
  const [employment, setEmployment] = useState<Employment | "">("");
  const [activity, setActivity] = useState<Activity | "">("");
  const [agreeRules, setAgreeRules] = useState(false);
  const [voteReady, setVoteReady] = useState(false);
  const [promoReady, setPromoReady] = useState(false);

  // ui
  const [submitting, setSubmitting] = useState(false);
  const [err, setErr] = useState<string | null>(null);
  const [showModal, setShowModal] = useState(false);

  // counter
  const [count, setCount] = useState<number | null>(null);
  useEffect(() => {
    (async () => {
      try {
        const r = await fetch("/api/drivers/count", { cache: "no-store" });
        if (!r.ok) return;
        const { count } = await r.json();
        if (typeof count === "number") setCount(count);
      } catch {}
    })();
  }, []);

  const resetForm = () => {
    setName("");
    setPhone("");
    setTelegram("");
    setCarMake("");
    setCarModel("");
    setYear("");
    setColor("");
    setEmployment("");
    setActivity("");
    setAgreeRules(false);
    setVoteReady(false);
    setPromoReady(false);
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setErr(null);

    if (!name.trim()) return setErr("–í–∫–∞–∂—ñ—Ç—å —ñ–º‚Äô—è.");
    if (!phone.trim()) return setErr("–í–∫–∞–∂—ñ—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω.");
    if (!employment) return setErr("–û–±–µ—Ä—ñ—Ç—å –∑–∞–π–Ω—è—Ç—ñ—Å—Ç—å.");
    if (!activity) return setErr("–û–±–µ—Ä—ñ—Ç—å –¥—ñ—è–ª—å–Ω—ñ—Å—Ç—å.");
    if (!agreeRules) return setErr("–ü–æ—Ç—Ä—ñ–±–Ω–∞ –∑–≥–æ–¥–∞ –∑ –ø—Ä–∞–≤–∏–ª–∞–º–∏ —Å–ø—ñ–ª—å–Ω–æ—Ç–∏.");

    setSubmitting(true);
    try {
      const res = await fetch("/api/drivers/apply", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          name: name.trim(),
          phone: phone.trim(),
          telegram: telegram.trim(),
          carMake: carMake.trim(),
          carModel: carModel.trim(),
          year: year === "" ? null : Number(year),
          color: color.trim(),
          employment,
          activity,
          agreeRules,
          voteReady,
          promoReady,
        }),
      });
      if (!res.ok) {
        const data = await res.json().catch(() => ({}));
        throw new Error(data?.message || "–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è —Ñ–æ—Ä–º–∏");
      }

      // success
      resetForm();
      // –æ–Ω–æ–≤–∏–º–æ –ª—ñ—á–∏–ª—å–Ω–∏–∫
      try {
        const r2 = await fetch("/api/drivers/count", { cache: "no-store" });
        if (r2.ok) {
          const { count } = await r2.json();
          if (typeof count === "number") setCount(count);
        }
      } catch {}
      setShowModal(true);
    } catch (e: any) {
      setErr(e.message || "–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
    } finally {
      setSubmitting(false);
    }
  };

  return (
    <main className="max-w-xl mx-auto px-4 py-8">
      <h1 className="text-3xl font-extrabold text-center mb-2">
        –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –≤ –£–∫—Ä–∞—ó–Ω—Å—å–∫—ñ–π —Å–ø—ñ–ª—å–Ω–æ—Ç—ñ –≤–æ–¥—ñ—ó–≤ —É –í—ñ–Ω–Ω—ñ–ø–µ–∑—ñ
      </h1>
      <p className="text-center text-gray-600 mb-4">
        –ó–∞–ø–æ–≤–Ω—ñ—Ç—å –∞–Ω–∫–µ—Ç—É, —â–æ–± –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –¥–æ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó —Å–ø—ñ–ª—å–Ω–æ—Ç–∏ –≤–æ–¥—ñ—ó–≤ —ñ –¥–æ—Å—Ç–∞–≤—â–∏–∫—ñ–≤.
      </p>

      {typeof count === "number" && (
        <div className="text-center mb-6">
          <span className="inline-flex items-center gap-2 rounded-md bg-green-50 px-3 py-1 text-green-700 border border-green-200">
            <span>üü¢ –£–∂–µ –∑ –Ω–∞–º–∏:</span>
            <b>{count}</b>
            <span>{count === 1 ? "–≤–æ–¥—ñ–π" : "–≤–æ–¥—ñ—ó–≤"}</span>
          </span>
        </div>
      )}

      <form
        onSubmit={handleSubmit}
        className="bg-white rounded-lg border shadow-sm p-4 sm:p-6 space-y-4"
      >
        <div className="grid grid-cols-1 sm:grid-cols-2 gap-3">
          <div className="sm:col-span-2">
            <label className="block text-sm font-medium mb-1">–Ü–º‚Äô—è</label>
            <input
              className="w-full border rounded px-3 py-2"
              value={name}
              onChange={(e) => setName(e.target.value)}
              placeholder="–Ü–º‚Äô—è"
              required
            />
          </div>

          <div>
            <label className="block text-sm font-medium mb-1">–¢–µ–ª–µ—Ñ–æ–Ω</label>
            <input
              className="w-full border rounded px-3 py-2"
              value={phone}
              onChange={(e) => setPhone(e.target.value)}
              placeholder="+1 ..."
              required
            />
          </div>

          <div>
            <label className="block text-sm font-medium mb-1">
              Telegram <span className="text-gray-400">(–Ω–µ–æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ)</span>
            </label>
            <input
              className="w-full border rounded px-3 py-2"
              value={telegram}
              onChange={(e) => setTelegram(e.target.value)}
              placeholder="@username –∞–±–æ chat id"
            />
          </div>

          <div>
            <label className="block text-sm font-medium mb-1">–ú–∞—Ä–∫–∞</label>
            <input
              className="w-full border rounded px-3 py-2"
              value={carMake}
              onChange={(e) => setCarMake(e.target.value)}
              placeholder="Toyota"
            />
          </div>

          <div>
            <label className="block text-sm font-medium mb-1">–ú–æ–¥–µ–ª—å</label>
            <input
              className="w-full border rounded px-3 py-2"
              value={carModel}
              onChange={(e) => setCarModel(e.target.value)}
              placeholder="Camry"
            />
          </div>

          <div>
            <label className="block text-sm font-medium mb-1">–†—ñ–∫</label>
            <input
              type="number"
              min={1980}
              max={2100}
              className="w-full border rounded px-3 py-2"
              value={year as number | ""}
              onChange={(e) =>
                setYear(e.target.value === "" ? "" : Number(e.target.value))
              }
              placeholder="2016"
            />
          </div>

          <div>
            <label className="block text-sm font-medium mb-1">–ö–æ–ª—ñ—Ä</label>
            <input
              className="w-full border rounded px-3 py-2"
              value={color}
              onChange={(e) => setColor(e.target.value)}
              placeholder="–°—ñ—Ä–∏–π"
            />
          </div>

          <div>
            <label className="block text-sm font-medium mb-1">–ó–∞–π–Ω—è—Ç—ñ—Å—Ç—å</label>
            <select
              className="w-full border rounded px-3 py-2 bg-white"
              value={employment}
              onChange={(e) => setEmployment(e.target.value as Employment)}
              required
            >
              <option value="" disabled>–û–±–µ—Ä—ñ—Ç—å –≤–∞—Ä—ñ–∞–Ω—Ç‚Ä¶</option>
              <option value="full-time">–ü–æ–≤–Ω–∏–π —Ä–æ–±–æ—á–∏–π –¥–µ–Ω—å</option>
              <option value="part-time">–ü—ñ–¥—Ä–æ–±—ñ—Ç–æ–∫</option>
            </select>
          </div>

          <div>
            <label className="block text-sm font-medium mb-1">–î—ñ—è–ª—å–Ω—ñ—Å—Ç—å</label>
            <select
              className="w-full border rounded px-3 py-2 bg-white"
              value={activity}
              onChange={(e) => setActivity(e.target.value as Activity)}
              required
            >
              <option value="" disabled>–û–±–µ—Ä—ñ—Ç—å –≤–∞—Ä—ñ–∞–Ω—Ç‚Ä¶</option>
              <option value="taxi">–¢–∞–∫—Å—ñ</option>
              <option value="delivery">–î–æ—Å—Ç–∞–≤–∫–∞</option>
              <option value="both">–Ü —Ç–∞–∫—Å—ñ, —ñ –¥–æ—Å—Ç–∞–≤–∫–∞</option>
            </select>
          </div>
        </div>

        <div className="space-y-2 pt-1">
          <label className="flex items-start gap-2">
            <input
              type="checkbox"
              className="mt-1"
              checked={agreeRules}
              onChange={(e) => setAgreeRules(e.target.checked)}
              required
            />
            <span>–Ø –ø–æ–≥–æ–¥–∂—É—é—Å—å –∑ –ø—Ä–∞–≤–∏–ª–∞–º–∏ —Å–ø—ñ–ª—å–Ω–æ—Ç–∏</span>
          </label>

          <label className="flex items-start gap-2">
            <input
              type="checkbox"
              className="mt-1"
              checked={voteReady}
              onChange={(e) => setVoteReady(e.target.checked)}
            />
            <span>–•–æ—á—É –±—Ä–∞—Ç–∏ —É—á–∞—Å—Ç—å —É –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è—Ö</span>
          </label>

          <label className="flex items-start gap-2">
            <input
              type="checkbox"
              className="mt-1"
              checked={promoReady}
              onChange={(e) => setPromoReady(e.target.checked)}
            />
            <span>–ì–æ—Ç–æ–≤–∏–π –±—Ä–∞—Ç–∏ —É—á–∞—Å—Ç—å –≤ –∞–∫—Ü—ñ—è—Ö —Ç–∞ —ñ–Ω—ñ—Ü—ñ–∞—Ç–∏–≤–∞—Ö</span>
          </label>
        </div>

        {err && <div className="text-red-600 text-sm font-medium">{err}</div>}

        <button
          type="submit"
          disabled={submitting}
          className={`w-full rounded bg-blue-600 text-white py-2 font-semibold transition ${
            submitting ? "opacity-70 cursor-not-allowed" : "hover:bg-blue-700"
          }`}
        >
          {submitting ? "–ù–∞–¥—Å–∏–ª–∞—î–º–æ‚Ä¶" : "–ù–∞–¥—ñ—Å–ª–∞—Ç–∏"}
        </button>
      </form>

      {/* MODAL */}
      {showModal && (
        <div className="fixed inset-0 z-50 flex items-center justify-center">
          <div
            className="absolute inset-0 bg-black/50"
            onClick={() => setShowModal(false)}
          />
          <div className="relative bg-white w-[90%] max-w-md rounded-xl shadow-lg p-6">
            <div className="flex justify-between items-start mb-2">
              <h2 className="text-xl font-bold">–í—ñ—Ç–∞—î–º–æ! üéâ</h2>
              <button
                className="text-gray-500 hover:text-gray-700"
                onClick={() => setShowModal(false)}
                aria-label="Close"
              >
                ‚úï
              </button>
            </div>
            <p className="text-gray-700 mb-3">
              –í–∞—à—É –∞–Ω–∫–µ—Ç—É –∑–±–µ—Ä–µ–∂–µ–Ω–æ. –í–∏ –¥–æ–¥–∞–Ω—ñ –¥–æ —Å–ø–∏—Å–∫—É —É—á–∞—Å–Ω–∏–∫—ñ–≤ –º–∞–π–±—É—Ç–Ω—å–æ—ó
              —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó —Å–ø—ñ–ª—å–Ω–æ—Ç–∏ –≤–æ–¥—ñ—ó–≤ —Ç–∞ –¥–æ—Å—Ç–∞–≤—â–∏–∫—ñ–≤ —É –í—ñ–Ω–Ω—ñ–ø–µ–∑—ñ.
            </p>
            <p className="text-gray-700 mb-4">
              –ú–∏ –Ω–∞ –µ—Ç–∞–ø—ñ —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è –∫–æ–º º—é–Ω—ñ—Ç—ñ —Ç–∞ —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∏.
              –ù–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º –Ω–∞–¥—ñ—à–ª–µ–º–æ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó –∑ –ø–æ–¥–∞–ª—å—à–∏–º–∏ –∫—Ä–æ–∫–∞–º–∏.
              –î—è–∫—É—î–º–æ, —â–æ –¥–æ–ª—É—á–∞—î—Ç–µ—Å—å! üíôüíõ
            </p>

      <a
        href="https://t.me/+zWOOiPwFLjs2NjUx"
        target="_blank"
        rel="noopener noreferrer"
        className="inline-flex justify-center w-full rounded bg-blue-600 text-white py-2 font-semibold hover:bg-blue-700 mb-2"
      >
        –ü—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –¥–æ Telegram-—Å–ø—ñ–ª—å–Ω–æ—Ç–∏
      </a>

            <button
              className="mt-2 inline-flex justify-center w-full rounded border py-2 font-semibold hover:bg-gray-50"
              onClick={() => setShowModal(false)}
            >
              –ì–∞—Ä–∞–∑–¥
            </button>
          </div>
        </div>
      )}
    </main>
  );
}
